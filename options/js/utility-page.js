// Generated by CoffeeScript 1.10.0
define(function(require) {
  var collection, getCustomFavorGsearch, init, onSaveFavorGsearch, updateGhostText, utils;
  utils = require('common/js/utils');
  collection = require('common/js/collection');
  init = function(cat) {
    var onoff;
    onoff = collection.getLocal('onoff', 'o');
    $('#switch-google').prop('checked', !!onoff.gsearch);
    $('#switch-gstatic').prop('checked', !!onoff.gstatic);
    return updateGhostText(getCustomFavorGsearch());
  };
  updateGhostText = function(host) {
    $('#custom-favor-gsearch').text(host);
    $('#custom-favor-gsearch-wrapper').prop('hidden', !host);
  };
  getCustomFavorGsearch = function() {
    var host;
    host = collection.getLocal('gsearch', 'a');
    host = host ? host[0] || '' : '';
    return host.slice(4, -5);
  };
  $('#switch-google').on('change', function() {
    collection.setSwitch('gsearch', !!this.checked);
  });
  $('#switch-gstatic').on('change', function() {
    collection.setSwitch('gstatic', !!this.checked);
  });
  $('#preferred-google').on('keyup', function(e) {
    if (e.keyCode === 13) {
      $('#input-dialog-wrapper .js-btn-ok').click();
    }
  });
  $('#gsearch-rule-switch').on('click', '.js-add-favor-gsearch', function() {
    var $ipt, content, dlg, val;
    val = getCustomFavorGsearch();
    content = utils.i18n('input_dlg_hint') + '<input autofocus value="' + val + '" placeholder="' + utils.i18n('input_dlg_inputph') + '">';
    dlg = dialog({
      title: utils.i18n('input_dlg_title'),
      content: content,
      width: 500,
      okValue: utils.i18n('ok_btn'),
      autofocus: false,
      ok: function() {
        var $input;
        $input = this._$('content').find('input');
        return onSaveFavorGsearch($input);
      },
      cancelValue: utils.i18n('cancel_btn'),
      cancel: function() {}
    }).showModal();
    $ipt = dlg._$('content').find('input');
    setTimeout(function() {
      $ipt.focus();
      val = $ipt.val();
      $ipt.val('');
      return $ipt.val(val);
    }, 250);
  });
  onSaveFavorGsearch = function($input) {
    var arr, host, i;
    host = $.trim($input.val());
    if (host === '') {
      collection.setLocal('gsearch', []);
      updateGhostText('');
      return;
    }
    host = host.toLowerCase();
    i = host.indexOf('\/\/');
    if (i !== -1) {
      host = host.substr(i + 2);
    }
    i = host.indexOf('\/');
    if (i !== -1) {
      host = host.substr(0, i);
    }
    if (utils.isIp(host) || utils.isHost(host)) {
      arr = host.split('.');
      if (arr.length === 2 && arr[0] === 'google') {
        host = "www." + host;
      }
      updateGhostText(host);
      collection.setLocal('gsearch', ["*://" + host + "/url*"]);
    } else {
      dialog({
        content: utils.i18n('opt_errtip_host')
      }).show($input[0]);
      $input.focus();
      return false;
    }
  };
  return {
    init: init
  };
});


//# sourceMappingURL=utility-page.js.map
