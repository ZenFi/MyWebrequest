// Generated by CoffeeScript 1.9.2
define(function() {
  var dialogOKCB, hideDlg, showDlg, showTip;
  dialogOKCB = null;
  showDlg = function(config) {
    var $dlgCancelBtn, $dlgContent, $dlgOKBtn, $dlgTitle, $overlayWrapper;
    $overlayWrapper = $('#confirm-dialog-wrapper');
    $dlgTitle = $('#dialog-title');
    $dlgContent = $('#dialog-content');
    $dlgOKBtn = $('#dialog-ok-btn');
    $dlgCancelBtn = $('#dialog-cancel-btn');
    config = config || {};
    $(document.body).addClass('ovHidden');
    $overlayWrapper.prop('hidden', false);
    $overlayWrapper.addClass('fadeInDown');
    $dlgTitle.text(config.title || 'No title');
    $dlgContent.html(config.content || 'No content');
    $dlgOKBtn.prop('hidden', !!config.hideOK);
    $dlgCancelBtn.prop('hidden', !!config.hideCancel);
    if ($.isFunction(config.callback)) {
      dialogOKCB = config.callback;
      dialogOKCB.args = config.cbargs ? config.cbargs : [];
      $dlgOKBtn.removeClass('cancel');
    } else {
      dialogOKCB = null;
    }
    if ($.isNumeric(config.timeout) && config.timeout > 0) {
      setTimeout(hideDialog, config.timeout);
    }
    if (config.focusOnOK) {
      return $dlgOKBtn.focus();
    } else {
      return $dlgCancelBtn.focus();
    }
  };
  $('#dialog-ok-btn').on('click', function(e) {
    hideDlg('#confirm-dialog-wrapper');
    if (dialogOKCB) {
      dialogOKCB.apply(null, dialogOKCB.args);
      dialogOKCB.args = null;
      return dialogOKCB = null;
    }
  });
  hideDlg = function(dlgWrapper) {
    var $overlayWrapper;
    $overlayWrapper = $(dlgWrapper);
    $overlayWrapper.removeClass('fadeInDown');
    $overlayWrapper.addClass('fadeOutUp');
    setTimeout(function() {
      $overlayWrapper.removeClass('fadeOutUp');
      $overlayWrapper.prop('hidden', true);
      return $(document.body).removeClass('ovHidden');
    }, 220);
  };
  $('.dialog').on('click', '.cancel', hideDlg);
  showTip = function(el, msg) {
    var $el, $msg, $tooltip, pos;
    $el = $(el);
    $tooltip = $('#tooltip');
    $msg = $('#tooltip-msg');
    pos = $el.offset();
    $msg.html(msg);
    pos.top += $el.height() + 15;
    pos.left += $el.width() / 2 - $tooltip.width() / 2;
    $tooltip.css({
      top: pos.top + 'px',
      left: pos.left + 'px'
    });
    setTimeout(function() {
      $tooltip.addClass('show');
    }, 10);
    $el.focus().select();
  };
  return {
    hideDlg: hideDlg,
    showDlg: showDlg,
    showTip: showTip
  };
});


//# sourceMappingURL=component.js.map
